package com.example.customers.controller.command;

import com.example.customers.entity.Person;
import org.springframework.stereotype.Controller;
import com.example.customers.service.PersonService;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.Optional;

@Controller
@RequestMapping("/persons")
public class PersonCommandController {

    private PersonService service;

    public PersonCommandController(PersonService service) {
        this.service = service;
    }

    // üîπ –û–¥–∏–Ω –º–µ—Ç–æ–¥: –∏ —Å–æ–∑–¥–∞—Ç—å, –∏ –æ–±–Ω–æ–≤–∏—Ç—å
    @PostMapping("/save")
    public String saveOrUpdateByName(@ModelAttribute Person person, Model model) {
        Person saved = service.saveOrUpdateByName(person);
        model.addAttribute("person", saved);
        model.addAttribute("message", "–ö–ª–∏–µ–Ω—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω –∏–ª–∏ –æ–±–Ω–æ–≤–ª—ë–Ω");
        String encodedName = URLEncoder.encode(saved.getName(), StandardCharsets.UTF_8);
        return "redirect:/persons/search?name=" + encodedName;
    }

    @PostMapping("/delete")
    public String deleteConfirmed(@RequestParam String name, RedirectAttributes redirectAttributes) {
        Optional<Person> personOpt = service.findByExactName(name);
        if (personOpt.isPresent()) {
            service.delete(personOpt.get());
            redirectAttributes.addFlashAttribute("message", "–ö–ª–∏–µ–Ω—Ç '" + name + "' —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!");
        } else {
            redirectAttributes.addFlashAttribute("error", "–ö–ª–∏–µ–Ω—Ç —Å –∏–º–µ–Ω–µ–º '" + name + "' –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–¥–∞–ª–µ–Ω–∏–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.");
        }
        return "redirect:/persons";
    }


}
